	
		//
		// EntityOperationDTO.swift
		// 
		// Code autogenerated. Do not modify this file.
		//
		
		import Foundation
		import SwiftyJSON
	
		 class EntityOperationDTO 	    {
		 
				var id: Int?;
				    	 
		 
				var name: String?;
				    	 
		 
				var type: DataType?;
				    	 
		 
				var serviceType: ServiceType?;
				    	 
		 
				var description: String?;
				    	 
		 
				var entityArgument: [EntityArgumentDTO]?;
				    	 
		 
				var entity_oid: Int?;
				    	 
		 
				var ruleAction_oid: [Int]?;
				    	 
		 
				var originState_oid: Int?;
				    	 
		 
				var targetState_oid: Int?;
				    	 
		 
				var triggers_oid: [Int]?;
				    	 
	   	   
			// MARK: - Constructor
			
			
		
			init ()
			{
				// Empty constructor
			}
			 func toDictionary() -> [String : AnyObject]
		
		   
			{
				var dictionary: [String : AnyObject] = [:];
				
			


				
					dictionary["id"] = self.id;
				

				
					dictionary["name"] = self.name;
				

				
					dictionary["type"] = self.type?.rawValue;
				

				
					dictionary["serviceType"] = self.serviceType?.rawValue;
				

				
					dictionary["description"] = self.description;
				

					dictionary["entityArgument"] = NSNull();
					if (self.entityArgument != nil)
					{
						var arrayOfDictionary: [[String : AnyObject]] = [];
						for item in self.entityArgument!
						{
							arrayOfDictionary.append(item.toDictionary());
						}
						
						dictionary["entityArgument"] = arrayOfDictionary;
					}
			

					dictionary["entity_oid"] = self.entity_oid;
			

					dictionary["ruleAction_oid"] = self.ruleAction_oid;
			

					dictionary["originState_oid"] = self.originState_oid;
			

					dictionary["targetState_oid"] = self.targetState_oid;
			

					dictionary["triggers_oid"] = self.triggers_oid;
			
						
				return dictionary;
			}
		}
		
	