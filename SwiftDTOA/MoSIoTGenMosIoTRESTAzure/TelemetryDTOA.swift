//
// TelemetryDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class TelemetryDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var frecuency: Double?;
	var schema: DataType?;
	var unit: TypeUnit?;
	var name: String?;
	var type: TelemetryType?;
	
	/* Rol: Telemetry o--> SensorTelemetry */
	var sensor: SensorTelemetryDTOA?;

	/* Rol: Telemetry o--> StateTelemetry */
	var state: StateTelemetryDTOA?;

	/* Rol: Telemetry o--> LocationTelemetry */
	var location: LocationTelemetryDTOA?;

	/* Rol: Telemetry o--> EventTelemetry */
	var event_: EventTelemetryDTOA?;

	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		self.frecuency = json["Frecuency"].object as? Double;
		if let enumValue = json["Schema"].object as? Int
		{
			self.schema = DataType(rawValue: enumValue);
		}
		if let enumValue = json["Unit"].object as? Int
		{
			self.unit = TypeUnit(rawValue: enumValue);
		}
		self.name = json["Name"].object as? String;
		if let enumValue = json["Type"].object as? Int
		{
			self.type = TelemetryType(rawValue: enumValue);
		}
		
		if (json["Sensor"] != JSON.null)
		{
			self.sensor = SensorTelemetryDTOA(fromJSONObject: json["Sensor"]);
		}

		if (json["State"] != JSON.null)
		{
			self.state = StateTelemetryDTOA(fromJSONObject: json["State"]);
		}

		if (json["Location"] != JSON.null)
		{
			self.location = LocationTelemetryDTOA(fromJSONObject: json["Location"]);
		}

		if (json["Event_"] != JSON.null)
		{
			self.event_ = EventTelemetryDTOA(fromJSONObject: json["Event_"]);
		}

		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["Frecuency"] = self.frecuency;
	
	

	
		dictionary["Schema"] = self.schema?.rawValue;
	
	

	
		dictionary["Unit"] = self.unit?.rawValue;
	
	

	
		dictionary["Name"] = self.name;
	
	

	
		dictionary["Type"] = self.type?.rawValue;
	
	
		
		dictionary["Sensor"] = self.sensor?.toDictionary() ?? NSNull();

		dictionary["State"] = self.state?.toDictionary() ?? NSNull();

		dictionary["Location"] = self.location?.toDictionary() ?? NSNull();

		dictionary["Event_"] = self.event_?.toDictionary() ?? NSNull();

		
		
		return dictionary;
	}
}

	