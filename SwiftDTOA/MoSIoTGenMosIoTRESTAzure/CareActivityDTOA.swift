//
// CareActivityDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class CareActivityDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var periodicity: TypePeriodicity?;
	var description: String?;
	var duration: Int?;
	var location: String?;
	
	/* Rol: CareActivity o--> Medication */
	var medications: MedicationDTOA?;

	/* GetAll: Appointment */
	var appointments: [AppointmentDTOA]?;

	/* Rol: CareActivity o--> NutritionOrder */
	var nutritionOrders: NutritionOrderDTOA?;

	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		if let enumValue = json["Periodicity"].object as? Int
		{
			self.periodicity = TypePeriodicity(rawValue: enumValue);
		}
		self.description = json["Description"].object as? String;
		self.duration = json["Duration"].object as? Int;
		self.location = json["Location"].object as? String;
		
		if (json["Medications"] != JSON.null)
		{
			self.medications = MedicationDTOA(fromJSONObject: json["Medications"]);
		}

		if (json["Appointments"] != JSON.null)
		{
			self.appointments = [];
			for subJson in json["Appointments"].arrayValue
			{
				self.appointments!.append(AppointmentDTOA(fromJSONObject: subJson));
			}
		}

		if (json["NutritionOrders"] != JSON.null)
		{
			self.nutritionOrders = NutritionOrderDTOA(fromJSONObject: json["NutritionOrders"]);
		}

		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["Periodicity"] = self.periodicity?.rawValue;
	
	

	
		dictionary["Description"] = self.description;
	
	

	
		dictionary["Duration"] = self.duration;
	
	

	
		dictionary["Location"] = self.location;
	
	
		
		dictionary["Medications"] = self.medications?.toDictionary() ?? NSNull();

		dictionary["Appointments"] = NSNull();
		if (self.appointments != nil)
		{
			var arrayOfDictionary: [[String : AnyObject]] = [];
			for item in self.appointments!
			{
				arrayOfDictionary.append(item.toDictionary());
			}
			
			dictionary["Appointments"] = arrayOfDictionary;
		}

		dictionary["NutritionOrders"] = self.nutritionOrders?.toDictionary() ?? NSNull();

		
		
		return dictionary;
	}
}

	