//
// GoalDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class GoalDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var name: String?;
	var description: String?;
	var priority: PriorityType?;
	var status: CareStatus?;
	var category: CategoryGoal?;
	var outcomeCode: String?;
	
	/* Rol: Goal o--> Target */
	var targets: [TargetDTOA]?;

	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		self.name = json["Name"].object as? String;
		self.description = json["Description"].object as? String;
		if let enumValue = json["Priority"].object as? Int
		{
			self.priority = PriorityType(rawValue: enumValue);
		}
		if let enumValue = json["Status"].object as? Int
		{
			self.status = CareStatus(rawValue: enumValue);
		}
		if let enumValue = json["Category"].object as? Int
		{
			self.category = CategoryGoal(rawValue: enumValue);
		}
		self.outcomeCode = json["OutcomeCode"].object as? String;
		
		if (json["Targets"] != JSON.null)
		{
			self.targets = TargetDTOA(fromJSONObject: json["Targets"]);
		}

		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["Name"] = self.name;
	
	

	
		dictionary["Description"] = self.description;
	
	

	
		dictionary["Priority"] = self.priority?.rawValue;
	
	

	
		dictionary["Status"] = self.status?.rawValue;
	
	

	
		dictionary["Category"] = self.category?.rawValue;
	
	

	
		dictionary["OutcomeCode"] = self.outcomeCode;
	
	
		
		dictionary["Targets"] = self.targets?.toDictionary() ?? NSNull();

		
		
		return dictionary;
	}
}

	