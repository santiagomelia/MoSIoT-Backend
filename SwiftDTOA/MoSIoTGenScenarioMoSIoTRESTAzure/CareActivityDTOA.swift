//
// CareActivityDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class CareActivityDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var name: String?;
	var description: String?;
	var periodicity: TypePeriodicity?;
	var duration: Int?;
	var location: String?;
	var outcomeCode: String?;
	var typeActivity: TypeActivity?;
	var activityCode: String?;
	
	/* Rol: CareActivity o--> Comunication */
	var comunications: [ComunicationDTOA]?;

	/* Rol: CareActivity o--> Appointment */
	var appointments: [AppointmentDTOA]?;

	/* Rol: CareActivity o--> Medication */
	var medications: MedicationDTOA?;

	/* Rol: CareActivity o--> NutritionOrder */
	var nutritionOrders: NutritionOrderDTOA?;

	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		self.name = json["Name"].object as? String;
		self.description = json["Description"].object as? String;
		if let enumValue = json["Periodicity"].object as? Int
		{
			self.periodicity = TypePeriodicity(rawValue: enumValue);
		}
		self.duration = json["Duration"].object as? Int;
		self.location = json["Location"].object as? String;
		self.outcomeCode = json["OutcomeCode"].object as? String;
		if let enumValue = json["TypeActivity"].object as? Int
		{
			self.typeActivity = TypeActivity(rawValue: enumValue);
		}
		self.activityCode = json["ActivityCode"].object as? String;
		
		if (json["Comunications"] != JSON.null)
		{
			self.comunications = ComunicationDTOA(fromJSONObject: json["Comunications"]);
		}

		if (json["Appointments"] != JSON.null)
		{
			self.appointments = AppointmentDTOA(fromJSONObject: json["Appointments"]);
		}

		if (json["Medications"] != JSON.null)
		{
			self.medications = MedicationDTOA(fromJSONObject: json["Medications"]);
		}

		if (json["NutritionOrders"] != JSON.null)
		{
			self.nutritionOrders = NutritionOrderDTOA(fromJSONObject: json["NutritionOrders"]);
		}

		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["Name"] = self.name;
	
	

	
		dictionary["Description"] = self.description;
	
	

	
		dictionary["Periodicity"] = self.periodicity?.rawValue;
	
	

	
		dictionary["Duration"] = self.duration;
	
	

	
		dictionary["Location"] = self.location;
	
	

	
		dictionary["OutcomeCode"] = self.outcomeCode;
	
	

	
		dictionary["TypeActivity"] = self.typeActivity?.rawValue;
	
	

	
		dictionary["ActivityCode"] = self.activityCode;
	
	
		
		dictionary["Comunications"] = self.comunications?.toDictionary() ?? NSNull();

		dictionary["Appointments"] = self.appointments?.toDictionary() ?? NSNull();

		dictionary["Medications"] = self.medications?.toDictionary() ?? NSNull();

		dictionary["NutritionOrders"] = self.nutritionOrders?.toDictionary() ?? NSNull();

		
		
		return dictionary;
	}
}

	