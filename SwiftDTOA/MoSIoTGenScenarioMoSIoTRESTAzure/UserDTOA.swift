//
// UserDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class UserDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var birthDate: NSDate?;
	var surnames: String?;
	var address: String?;
	var phone: String?;
	var photo: String?;
	var isActive: Bool?;
	var type: GenderType?;
	var isDiseased: Bool?;
	var email: String?;
	var name: String?;
	var description: String?;
	
	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
	
		self.birthDate = NSDate.initFromString(json["BirthDate"].object as? String);
		self.surnames = json["Surnames"].object as? String;
		self.address = json["Address"].object as? String;
		self.phone = json["Phone"].object as? String;
		self.photo = json["Photo"].object as? String;
		self.isActive = json["IsActive"].object as? Bool;
		if let enumValue = json["Type"].object as? Int
		{
			self.type = GenderType(rawValue: enumValue);
		}
		self.isDiseased = json["IsDiseased"].object as? Bool;
		self.email = json["Email"].object as? String;
		self.name = json["Name"].object as? String;
		self.description = json["Description"].object as? String;
		
		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["BirthDate"] = self.birthDate?.toString();
	
	

	
		dictionary["Surnames"] = self.surnames;
	
	

	
		dictionary["Address"] = self.address;
	
	

	
		dictionary["Phone"] = self.phone;
	
	

	
		dictionary["Photo"] = self.photo;
	
	

	
		dictionary["IsActive"] = self.isActive;
	
	

	
		dictionary["Type"] = self.type?.rawValue;
	
	

	
		dictionary["IsDiseased"] = self.isDiseased;
	
	

	
		dictionary["Email"] = self.email;
	
	

	
		dictionary["Name"] = self.name;
	
	

	
		dictionary["Description"] = self.description;
	
	
		
		
		
		return dictionary;
	}
}

	