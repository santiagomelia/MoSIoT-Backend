//
// DeviceDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class DeviceDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var deviceSwitch: Bool?;
	var tag: String?;
	var isSimulated: Bool?;
	var serialNumber: String?;
	var firmVersion: String?;
	var trademark: String?;
	var name: String?;
	var description: String?;
	
	/* Rol: Device o--> DeviceTemplate */
	var deviceTemplate: DeviceTemplateDTOA?;

	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		self.deviceSwitch = json["DeviceSwitch"].object as? Bool;
		self.tag = json["Tag"].object as? String;
		self.isSimulated = json["IsSimulated"].object as? Bool;
		self.serialNumber = json["SerialNumber"].object as? String;
		self.firmVersion = json["FirmVersion"].object as? String;
		self.trademark = json["Trademark"].object as? String;
		self.name = json["Name"].object as? String;
		self.description = json["Description"].object as? String;
		
		if (json["DeviceTemplate"] != JSON.null)
		{
			self.deviceTemplate = DeviceTemplateDTOA(fromJSONObject: json["DeviceTemplate"]);
		}

		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["DeviceSwitch"] = self.deviceSwitch;
	
	

	
		dictionary["Tag"] = self.tag;
	
	

	
		dictionary["IsSimulated"] = self.isSimulated;
	
	

	
		dictionary["SerialNumber"] = self.serialNumber;
	
	

	
		dictionary["FirmVersion"] = self.firmVersion;
	
	

	
		dictionary["Trademark"] = self.trademark;
	
	

	
		dictionary["Name"] = self.name;
	
	

	
		dictionary["Description"] = self.description;
	
	
		
		dictionary["DeviceTemplate"] = self.deviceTemplate?.toDictionary() ?? NSNull();

		
		
		return dictionary;
	}
}

	