	
		package MoSIoTGenMosIoTRESTAzure.uiModels.DTO;
		
		import java.util.ArrayList;
		
		import org.json.JSONArray;
		import org.json.JSONException;
		import org.json.JSONObject;
		import  MoSIoTGenMosIoTRESTAzure.uiModels.DTO.utils.*;
		import  MoSIoTGenMosIoTRESTAzure.uiModels.DTO.enumerations.*;
		
		
		/**
		 * Code autogenerated. Do not modify this file.
		 */
		
		
		public class RecipeTriggerDTO 	    implements IDTO
	    {
				private Integer recipe_oid;
				public Integer  getRecipe_oid () { return recipe_oid; } 
				public void setRecipe_oid (Integer value) { recipe_oid = value;  } 
				    	 
				private Integer id;
				public Integer getId () { return id; } 
				public void setId  (Integer value) { id = value;  } 
				    	 
				private OperatorType operator_;
				public OperatorType getOperator_ () { return operator_; } 
				public void setOperator_  (OperatorType value) { operator_ = value;  } 
				    	 
				private String value;
				public String getValue () { return value; } 
				public void setValue  (String value) { value = value;  } 
				    	 
				private ArrayList<Integer> entityAttributes_oid;
				public ArrayList<Integer>  getEntityAttributes_oid () { return entityAttributes_oid; } 
				public void setEntityAttributes_oid (ArrayList<Integer> value) { entityAttributes_oid = value;  } 
				    	 
				private Integer event__oid;
				public Integer  getEvent__oid () { return event__oid; } 
				public void setEvent__oid (Integer value) { event__oid = value;  } 
				    	 
				private String description;
				public String getDescription () { return description; } 
				public void setDescription  (String value) { description = value;  } 
				    	 
	   
			    public JSONObject toJSON ()
				{
					JSONObject json = new JSONObject();
					
					try
					{

						if (this.recipe_oid != null)
						{
							json.put("Recipe_oid", this.recipe_oid.intValue());
						}
				
						  json.put("Id", this.id.intValue());
				
				
						  json.put("Operator_", this.operator_.getRawValue());
				
				
						  json.put("Value", this.value);
				

						if (this.entityAttributes_oid != null)
						{
							JSONArray jsonArray = new JSONArray();
							for (int i = 0; i < this.entityAttributes_oid.size(); ++i)
							{
								jsonArray.put(this.entityAttributes_oid.get(i));
							}
							json.put("EntityAttributes_oid", jsonArray);
						}
		

						if (this.event__oid != null)
						{
							json.put("Event__oid", this.event__oid.intValue());
						}
				
						  json.put("Description", this.description);
				
						
					}
					catch (JSONException e)
					{
						e.printStackTrace();
					}
				
				return json;
			}
		
			// endregion
		}
	   
	   
	   
		
	