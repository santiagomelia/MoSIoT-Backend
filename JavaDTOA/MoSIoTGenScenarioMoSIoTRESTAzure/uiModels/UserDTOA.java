
package MoSIoTGenScenarioMoSIoTRESTAzure.uiModels.DTOA;

import MoSIoTGenScenarioMoSIoTRESTAzure.uiModels.DTO.*;
import MoSIoTGenScenarioMoSIoTRESTAzure.uiModels.DTO.utils.*;
import MoSIoTGenScenarioMoSIoTRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class UserDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private java.util.Date birthDate;
	public java.util.Date getBirthDate () { return birthDate; }
	public void setBirthDate (java.util.Date birthDate) { this.birthDate = birthDate; }
	
	private String surnames;
	public String getSurnames () { return surnames; }
	public void setSurnames (String surnames) { this.surnames = surnames; }
	
	private String address;
	public String getAddress () { return address; }
	public void setAddress (String address) { this.address = address; }
	
	private String phone;
	public String getPhone () { return phone; }
	public void setPhone (String phone) { this.phone = phone; }
	
	private String photo;
	public String getPhoto () { return photo; }
	public void setPhoto (String photo) { this.photo = photo; }
	
	private Boolean isActive;
	public Boolean getIsActive () { return isActive; }
	public void setIsActive (Boolean isActive) { this.isActive = isActive; }
	
	private GenderType type;
	public GenderType getType () { return type; }
	public void setType (GenderType type) { this.type = type; }
	
	private Boolean isDiseased;
	public Boolean getIsDiseased () { return isDiseased; }
	public void setIsDiseased (Boolean isDiseased) { this.isDiseased = isDiseased; }
	
	private String email;
	public String getEmail () { return email; }
	public void setEmail (String email) { this.email = email; }
	
	
	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public UserDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("BirthDate")))
			{
			 
			 	String stringDate = (String) json.opt("BirthDate");
				this.birthDate = DateUtils.stringToDateFormat(stringDate);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Surnames")))
			{
			 
				this.surnames = (String) json.opt("Surnames");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Address")))
			{
			 
				this.address = (String) json.opt("Address");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Phone")))
			{
			 
				this.phone = (String) json.opt("Phone");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Photo")))
			{
			 
				this.photo = (String) json.opt("Photo");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("IsActive")))
			{
			 
				this.isActive = (Boolean) json.opt("IsActive");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Type")))
			{
				int enumRawValue = (int) json.opt("Type");
				this.type = GenderType.fromRawValue(enumRawValue);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("IsDiseased")))
			{
			 
				this.isDiseased = (Boolean) json.opt("IsDiseased");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Email")))
			{
			 
				this.email = (String) json.opt("Email");
			 
			}
			
			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.birthDate != null)
			json.put("BirthDate", DateUtils.dateToFormatString(this.birthDate));
		
		
		  if (this.surnames != null)
			json.put("Surnames", this.surnames);
		
		
		  if (this.address != null)
			json.put("Address", this.address);
		
		
		  if (this.phone != null)
			json.put("Phone", this.phone);
		
		
		  if (this.photo != null)
			json.put("Photo", this.photo);
		
		
		  if (this.isActive != null)
			json.put("IsActive", this.isActive);
		
		
		  if (this.type != null)
			json.put("Type", this.type.getRawValue());
		
		
		  if (this.isDiseased != null)
			json.put("IsDiseased", this.isDiseased);
		
		
		  if (this.email != null)
			json.put("Email", this.email);
		
			
			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		UserDTO dto = new UserDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setBirthDate (this.getBirthDate());

	dto.setSurnames (this.getSurnames());

	dto.setAddress (this.getAddress());

	dto.setPhone (this.getPhone());

	dto.setPhoto (this.getPhoto());

	dto.setIsActive (this.getIsActive());

	dto.setType (this.getType());

	dto.setIsDiseased (this.getIsDiseased());

	dto.setEmail (this.getEmail());

		
		
		// Roles
		
		
		return dto;
	}

	// endregion
}

	