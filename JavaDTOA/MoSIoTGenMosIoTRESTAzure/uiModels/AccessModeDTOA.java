
package MoSIoTGenMosIoTRESTAzure.uiModels.DTOA;

import MoSIoTGenMosIoTRESTAzure.uiModels.DTO.*;
import MoSIoTGenMosIoTRESTAzure.uiModels.DTO.utils.*;
import MoSIoTGenMosIoTRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class AccessModeDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private AccessModeValue typeAccessMode;
	public AccessModeValue getTypeAccessMode () { return typeAccessMode; }
	public void setTypeAccessMode (AccessModeValue typeAccessMode) { this.typeAccessMode = typeAccessMode; }
	
	private String description;
	public String getDescription () { return description; }
	public void setDescription (String description) { this.description = description; }
	
	private String name;
	public String getName () { return name; }
	public void setName (String name) { this.name = name; }
	
	
	/* Rol: AccessMode o--> AdaptationTypeRequired */
	private ArrayList<AdaptationTypeRequiredDTOA> adaptationType;
	public ArrayList<AdaptationTypeRequiredDTOA> getAdaptationType () { return adaptationType; }
	public void setAdaptationType (ArrayList<AdaptationTypeRequiredDTOA> adaptationType) { this.adaptationType = adaptationType; }

	/* Rol: AccessMode o--> AdaptationDetailRequired */
	private ArrayList<AdaptationDetailRequiredDTOA> adaptationDetail;
	public ArrayList<AdaptationDetailRequiredDTOA> getAdaptationDetail () { return adaptationDetail; }
	public void setAdaptationDetail (ArrayList<AdaptationDetailRequiredDTOA> adaptationDetail) { this.adaptationDetail = adaptationDetail; }

	/* Rol: AccessMode o--> AdaptationRequest */
	private ArrayList<AdaptationRequestDTOA> adaptationRequest;
	public ArrayList<AdaptationRequestDTOA> getAdaptationRequest () { return adaptationRequest; }
	public void setAdaptationRequest (ArrayList<AdaptationRequestDTOA> adaptationRequest) { this.adaptationRequest = adaptationRequest; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public AccessModeDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("TypeAccessMode")))
			{
				int enumRawValue = (int) json.opt("TypeAccessMode");
				this.typeAccessMode = AccessModeValue.fromRawValue(enumRawValue);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Description")))
			{
			 
				this.description = (String) json.opt("Description");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Name")))
			{
			 
				this.name = (String) json.opt("Name");
			 
			}
			

			JSONArray arrayAdaptationType = json.optJSONArray("AdaptationType");
			if (arrayAdaptationType != null)
			{
				this.adaptationType = new ArrayList<AdaptationTypeRequiredDTOA>();
				for (int i = 0; i < arrayAdaptationType.length(); ++i)
				{
					JSONObject subJson = (JSONObject) arrayAdaptationType.opt(i);
					AdaptationTypeRequiredDTOA tmp = new AdaptationTypeRequiredDTOA();
					tmp.setFromJSON(subJson);
					this.adaptationType.add(tmp);
				}
			}


			JSONObject jsonAdaptationDetail = json.optJSONObject("AdaptationDetail");
			if (jsonAdaptationDetail != null)
			{
				AdaptationDetailRequiredDTOA tmp = new AdaptationDetailRequiredDTOA();
				tmp.setFromJSON(jsonAdaptationDetail);
				this.adaptationDetail = tmp;
			}


			JSONObject jsonAdaptationRequest = json.optJSONObject("AdaptationRequest");
			if (jsonAdaptationRequest != null)
			{
				AdaptationRequestDTOA tmp = new AdaptationRequestDTOA();
				tmp.setFromJSON(jsonAdaptationRequest);
				this.adaptationRequest = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.typeAccessMode != null)
			json.put("TypeAccessMode", this.typeAccessMode.getRawValue());
		
		
		  if (this.description != null)
			json.put("Description", this.description);
		
		
		  if (this.name != null)
			json.put("Name", this.name);
		
			

			if (this.adaptationType != null)
			{
				JSONArray jsonArray = new JSONArray();
				for (int i = 0; i < this.adaptationType.size(); ++i)
				{
					jsonArray.put(this.adaptationType.get(i).toJSON());
				}
				json.put("AdaptationType", jsonArray);
			}


			if (this.adaptationDetail != null)
			{
				json.put("AdaptationDetail", this.adaptationDetail.toJSON());
			}


			if (this.adaptationRequest != null)
			{
				json.put("AdaptationRequest", this.adaptationRequest.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		AccessModeDTO dto = new AccessModeDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setTypeAccessMode (this.getTypeAccessMode());

	dto.setDescription (this.getDescription());

	dto.setName (this.getName());

		
		
		// Roles
					// TODO: from DTOA [ AdaptationType ] (dataType : ArrayList<AdaptationTypeRequiredDTOA>) to DTO [ AdaptationTypeRequired ]
					// TODO: from DTOA [ AdaptationDetail ] (dataType : ArrayList<AdaptationDetailRequiredDTOA>) to DTO [ AdaptationDetailRequired ]
					// TODO: from DTOA [ AdaptationRequest ] (dataType : ArrayList<AdaptationRequestDTOA>) to DTO [ AdaptationRequest ]
		
		
		return dto;
	}

	// endregion
}

	