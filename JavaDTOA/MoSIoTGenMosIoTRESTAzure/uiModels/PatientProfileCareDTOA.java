
package MoSIoTGenMosIoTRESTAzure.uiModels.DTOA;

import MoSIoTGenMosIoTRESTAzure.uiModels.DTO.*;
import MoSIoTGenMosIoTRESTAzure.uiModels.DTO.utils.*;
import MoSIoTGenMosIoTRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class PatientProfileCareDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private LanguageCode preferredLanguage;
	public LanguageCode getPreferredLanguage () { return preferredLanguage; }
	public void setPreferredLanguage (LanguageCode preferredLanguage) { this.preferredLanguage = preferredLanguage; }
	
	private String region;
	public String getRegion () { return region; }
	public void setRegion (String region) { this.region = region; }
	
	private HazardValue hazardAvoidance;
	public HazardValue getHazardAvoidance () { return hazardAvoidance; }
	public void setHazardAvoidance (HazardValue hazardAvoidance) { this.hazardAvoidance = hazardAvoidance; }
	
	
	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public PatientProfileCareDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("PreferredLanguage")))
			{
				int enumRawValue = (int) json.opt("PreferredLanguage");
				this.preferredLanguage = LanguageCode.fromRawValue(enumRawValue);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Region")))
			{
			 
				this.region = (String) json.opt("Region");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("HazardAvoidance")))
			{
				int enumRawValue = (int) json.opt("HazardAvoidance");
				this.hazardAvoidance = HazardValue.fromRawValue(enumRawValue);
			 
			}
			
			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.preferredLanguage != null)
			json.put("PreferredLanguage", this.preferredLanguage.getRawValue());
		
		
		  if (this.region != null)
			json.put("Region", this.region);
		
		
		  if (this.hazardAvoidance != null)
			json.put("HazardAvoidance", this.hazardAvoidance.getRawValue());
		
			
			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		PatientProfileDTO dto = new PatientProfileDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setPreferredLanguage (this.getPreferredLanguage());

	dto.setRegion (this.getRegion());

	dto.setHazardAvoidance (this.getHazardAvoidance());

		
		
		// Roles
		
		
		return dto;
	}

	// endregion
}

	